美甲设计生成器 - 产品需求文档 (更新版)

1. 产品概述

1.1 功能名称
基础美甲设计生成器(Nail Design Generator)

1.2 功能描述
允许用户通过输入文本描述(prompt)，利用AI技术生成专业的美甲设计图片。系统将自动将用户输入与内置模板结合，确保生成高质量的标准化美甲展示效果。该功能将直接集成在网站首页(landing page)，方便用户即时体验。

1.3 目标用户
- 美甲师和美甲沙龙从业人员
- 美甲爱好者
- 寻找美甲灵感的普通消费者

1.4 功能目标
- 提供简单直观的界面，让用户轻松生成美甲设计
- 确保生成的美甲设计图片专业且高质量
- 统一输出格式(双排5指甲×2=10个指甲图)，模拟真实美甲展示效果
- 使用每日限制模式（非积分系统）
- 在首页展示生成功能和最新生成结果

2. 功能详细规格

2.1 功能范围
本期开发的"基础美甲设计生成"功能包括：

1. 首页集成的提示词输入界面
2. AI图片生成进程(使用Replicate模型)
3. 生成结果展示（首页按时间降序排列）
4. 基础错误处理和反馈
5. 每日使用次数限制

2.2 核心功能描述

2.2.1 提示词输入
用户能够在首页hero部分下方输入文本描述，说明他们希望生成的美甲设计特征，如颜色、风格、图案等。

输入参数：
- 必填：文本描述(5-200字符)
- 每个用户每天限制5次生成

2.2.2 AI图片生成
系统使用Replicate上的black-forest-labs/flux-dev模型生成图像。用户输入的提示词将与系统内置的模板组合，以确保输出符合标准化美甲展示格式。

内置提示词模板：
提示词模板应包含以下关键内容：
- 10个指甲排列成两行，每行5个
- 指定专业的美甲展示格式
- 技术要求（高清、专业打光等）
- 结合用户输入的设计描述

2.2.3 生成结果展示
成功生成后，系统将显示生成的美甲设计图片，并将其添加到首页的设计展示区域（按时间降序）。

展示内容：
- 生成的美甲图片(1792×1024像素)
- 使用的提示词描述
- 生成时间
- 用户剩余每日使用次数

操作选项：
- 下载图片
- 分享图片链接

2.2.4 首页集成展示
在网站首页中集成美甲设计生成功能和展示区：

布局结构：
- Hero区域下方放置提示词输入框和生成按钮
- 下方区域Grid布局展示生成结果
- 每个结果以卡片形式展示，包含图片、描述和尺寸信息
- 参考上传的UI设计图

2.2.5 每日使用限制
实现基于用户的每日使用次数限制：

限制逻辑：
- 每个用户每天最多生成5次
- 使用时间戳跟踪用户使用情况
- 每天凌晨自动重置使用次数
- 未登录用户提示需要登录

2.2.6 错误处理与反馈
系统提供清晰的状态反馈和错误处理。

反馈类型：
- 生成中状态显示(加载动画)
- 成功/失败消息提示
- 达到使用限制提示
- API错误处理

3. 用户流程

3.1 基本流程
1. 用户访问网站首页
2. 查看当前使用次数余额
3. 在文本框中输入美甲设计描述
4. 点击"生成"按钮
5. 系统显示生成中状态(加载动画)
6. 设计生成完成后显示结果
7. 新生成的设计自动添加到首页展示区
8. 用户可以下载图片或继续生成(如果未达限制)

3.2 错误流程
达到使用限制情况：
1. 用户点击"生成"按钮
2. 系统检测到用户已达今日使用限制
3. 显示"今日生成次数已用完"错误消息
4. 提示用户明天再来

生成失败情况：
1. 用户点击"生成"按钮
2. 系统尝试生成但遇到错误
3. 显示生成失败错误消息
4. 提供重试选项(不消耗额外使用次数)

4. UI/UX设计需求

4.1 首页集成布局
根据提供的参考图片，首页应包含：
- 顶部：网站导航和标题
- Hero区域：主标题和描述
- 输入区域：提示词输入框和生成按钮
- 作品展示区：网格布局展示生成结果，每行3个卡片

4.2 UI组件
1. 提示词输入区：
  - 文本输入框(多行)
  - 字符计数器(5-200)
  - 生成按钮(突出显示)

2. 生成控制区：
  - 主要生成按钮
  - 当前使用次数显示
  - 用户登录状态指示

3. 结果卡片组件：
  - 图片展示容器
  - 提示词文本显示
  - 尺寸标签(1792×1024)
  - 用户头像或标识

4. 状态反馈组件：
  - 加载动画
  - 成功/错误提示消息
  - 使用限制警告

4.3 交互设计
- 输入框实时验证(字符长度)
- 生成过程中禁用操作按钮
- 点击图片可放大查看
- 生成后结果自动添加至页面顶部
- 下拉式错误消息，3秒后自动消失

5. 技术实现方案

5.1 技术栈概述
- 前端框架：NextJS
- 数据存储：supabase
- AI集成：Replicate API (black-forest-labs/flux-dev模型)
- 文件存储：R2 Storage

5.2 核心模块实现说明

5.2.1 提示词处理模块
需要实现一个模块来处理和验证用户输入的提示词，并将其与系统预设的美甲设计模板结合。该模块应包含：

- 输入验证函数(检查字符长度等)
- 提示词模板组合函数
- 预设美甲设计模板定义

5.2.2 用户使用限制模块
需要实现一个模块来跟踪和管理用户的每日使用限制：

- 用户使用次数检查函数
- 使用记录更新函数
- 每日重置机制

5.2.3 AI生成服务模块
需要实现一个服务来处理AI图像生成请求：

- Replicate API集成
- 错误处理和重试机制
- 结果处理和保存

5.2.4 文件存储集成
需要实现R2存储集成来保存生成的图像：

- 图像上传功能
- 公共URL生成
- 文件命名规则

5.2.5 首页集成模块
需要实现将生成功能和结果集成到首页的模块：

- 提示词输入组件
- 生成状态管理
- 结果卡片组件
- 图片网格布局组件

5.3 API端点说明

需要实现的主要API端点：

- POST /api/generate/nail-design：处理美甲设计生成请求
  - 输入：提示词文本
  - 输出：生成的图像URL和相关信息

-black-forest-labs/flux-dev的api参考代码如下
import Replicate from "replicate";
const replicate = new Replicate();

const input = {
    prompt: "black forest gateau cake spelling out the words \"FLUX DEV\", tasty, food photography, dynamic shot",
    guidance: 3.5
};

const output = await replicate.run("black-forest-labs/flux-dev", { input });

import { writeFile } from "node:fs/promises";
for (const [index, item] of Object.entries(output)) {
  await writeFile(`output_${index}.webp`, item);
}
//=> output_0.webp written to disk
  
- GET /api/nail-designs：获取已生成的美甲设计列表
  - 支持分页
  - 支持按时间排序
  
- GET /api/user/usage-limits：获取用户当前使用情况
  - 返回今日已使用次数和限制

6. 数据模型

基于现有数据表，需要新增以下表和字段：

6.1 美甲设计表
需要新建一个表来存储生成的美甲设计：

nail_designs 表：
- id：主键
- uuid：唯一标识
- user_uuid：用户UUID (关联到users表)
- prompt：用户输入的提示词
- full_prompt：完整的生成提示词
- image_url：生成图片URL
- width：图片宽度
- height：图片高度
- created_at：创建时间
- status：状态（'success', 'failed'等）

6.2 用户使用限制表
需要新建一个表来跟踪用户的使用限制：

user_usage_limits 表：
- id：主键
- user_uuid：用户UUID (关联到users表)
- daily_usage：当日已使用次数
- daily_limit：当日使用限制（默认5）
- last_used_at：最后使用时间
- reset_at：下次重置时间
- created_at：创建时间
- updated_at：更新时间

7. 环境变量配置

7.1 环境变量列表

需要配置以下环境变量:

AI生成配置：
- REPLICATE_API_TOKEN: Replicate API访问令牌
- NAIL_DESIGN_MODEL: 使用的模型ID (black-forest-labs/flux-dev)
- NAIL_DESIGN_TEMPLATE: 预设的美甲设计提示词模板
- NAIL_IMAGE_WIDTH: 生成图片宽度 (1792)
- NAIL_IMAGE_HEIGHT: 生成图片高度 (1024)
- NAIL_INFERENCE_STEPS: 推理步骤数 (50)
- NAIL_GUIDANCE_SCALE: 引导缩放值 (7.5)

应用配置：
- DAILY_GENERATION_LIMIT: 每日生成限制次数 (5)
- NEXT_PUBLIC_APP_URL: 应用URL

7.2 本地与线上环境配置

本地开发环境：
- 创建.env.development文件存储本地开发环境变量
- 可使用测试账号或有限的API调用次数
- R2可以替换为本地文件系统或测试桶

线上生产环境：
- 使用平台环境变量设置系统(Vercel等)
- 启用生产级API密钥和配额
- 使用生产环境的存储桶和访问权限

配置示例：
- 本地开发使用.env.development文件
- 生产环境通过CI/CD系统注入环境变量
- 敏感信息(如API密钥)不应出现在代码库中

8. 测试计划

8.1 功能测试要点
- 验证提示词输入验证(长度限制)
- 验证每日使用限制逻辑
- 验证图像生成流程
- 验证结果存储和展示
- 验证首页展示效果

8.2 边界条件测试
- 空提示词处理
- 提示词极限长度(5字符和200字符)
- 用户达到每日限制的情况
- API超时或失败的情况
- 跨天重置逻辑

8.3 性能和负载测试
- 首页加载多张生成图片的性能
- 同时多个用户请求生成的处理
- 图片存储和加载优化

9. 上线计划

9.1 第一阶段：基础功能上线
- 开发美甲设计生成核心功能
- 集成到首页
- 实现每日使用限制
- 数据收集和分析

9.2 第二阶段：优化与扩展
- 基于用户反馈优化生成质量
- 考虑添加自定义功能选项
- 为后续订阅模式做准备
- 扩展生成选项和模板

10. 未来功能规划

10.1 订阅模式(未来计划)
- 免费用户：每日有限生成次数
- 付费订阅用户：无限或更高配额
- 定价策略和套餐设计

10.2 高级功能(未来计划)
- 自定义指甲形状选择
- 批量生成多种设计
- 社区分享和点赞系统
- 个人图库管理

